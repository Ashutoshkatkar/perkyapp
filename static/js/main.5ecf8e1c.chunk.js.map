{"version":3,"sources":["todo-context.js","components/todo-form/todo-form.jsx","components/checkbox/checkbox.jsx","components/todo-list/todo-list.jsx","components/todo-results/todo-results.jsx","app.jsx","index.jsx"],"names":["TodosContext","createContext","TodoForm","React","todos","setTodos","task","setTask","handleAddTodo","ids","Math","random","toString","slice","id","label","checked","alert","console","log","className","placeholder","value","onChange","e","target","onKeyUp","keyCode","type","onClick","Checkbox","onDelete","tabIndex","role","TodoList","flag","setFlage","setUpstate","count","countss","setCountss","localStorage","clear","toggleCheck","objIndex","findIndex","obj","h","map","x","filter","length","setItem","todoItem","handleKeyUp","TodoResults","getItem","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ecf8e1c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const TodosContext = createContext({});\n","import * as React from 'react';\nimport { TodosContext } from '../../todo-context';\nimport './todo-form.scss';\n\nexport const TodoForm = () => {\n  const { todos, setTodos } = React.useContext(TodosContext);\n\n  const [task, setTask] = React.useState('');\n\n  const handleAddTodo = () => {\n    if (!task) {\n      alert('please fill input');\n    } else {\n      const ids = Math.random().toString(4).slice(2);\n      setTodos([...todos, { id: ids, label: task, checked: false }]);\n\n      setTask('');\n    }\n  };\n\n  console.log('mIAN TODO', todos);\n\n  const handleKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      handleAddTodo();\n    }\n  };\n\n  // console.log('val', task);\n\n  return (\n    <div className=\"todo-form\">\n      <input\n        placeholder=\"Enter new task\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        onKeyUp={handleKeyUp}\n      />\n      <button type=\"button\" onClick={handleAddTodo}>\n        Add task\n      </button>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport './checkbox.scss';\n\nexport const Checkbox = ({\n  onClick, checked, onDelete, label, onKeyUp,\n}) => (\n  <div className=\"checkbox\">\n    <div\n      tabIndex=\"0\"\n      role=\"checkbox\"\n      aria-checked\n      className=\"checkbox-content\"\n      onClick={onClick}\n      onKeyUp={onKeyUp}\n    >\n      <input tabIndex=\"-1\" type=\"checkbox\" checked={checked} onChange={onClick} />\n      <span className={checked ? 'checkbox-checked' : ''}>{label}</span>\n    </div>\n    <button type=\"button\" className=\"checkbox-delete\" onClick={onDelete}>\n      x\n    </button>\n  </div>\n);\n","import * as React from 'react';\nimport { Checkbox } from '../checkbox';\nimport { TodosContext } from '../../todo-context';\nimport './todo-list.scss';\n\nexport const TodoList = () => {\n  const { todos, setTodos } = React.useContext(TodosContext);\n  const [flag, setFlage] = React.useState(false);\n  const [upstate, setUpstate] = React.useState();\n  const [count, setCount] = React.useState(0);\n  const [countss, setCountss] = React.useState(1);\n  React.useEffect(() => {\n    console.log('useef calling');\n    localStorage.clear();\n  }, [setTodos]);\n  const handleDelete = (ids) => {\n    setTodos(todos.filter((task) => task.id !== ids));\n  };\n\n  const toggleCheck = (id) => {\n    // Fix an ability to toggle task\n    const objIndex = todos.findIndex((obj) => obj.id === id);\n\n    console.log('objind is', objIndex);\n    if (flag === false) {\n      setFlage(todos[objIndex].checked = true);\n\n      setFlage(false);\n    } else {\n      // setFlage(todos[objIndex].checked = false);\n    }\n\n    // console.log('flag', flag);\n    console.log('count is', count);\n    //  todos[objIndex].checked = true;\n\n    //  console.log('toobj', todos[objIndex].checked);\n    const h = todos.map((x) => x.checked === true);\n    console.log('h', h);\n    setCountss(h.filter((obj) => obj === true).length);\n    console.log('fcount', countss);\n    localStorage.setItem('count', countss);\n\n    setUpstate('');\n  };\n\n  const handleKeyUp = (e, id) => {\n    if (e.keyCode === 13) {\n      toggleCheck(id);\n    }\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <span className=\"todo-list-title\">Things to do:</span>\n      {todos.length ? (\n        <div className=\"todo-list-content\">\n          {todos.map((todoItem) => (\n            <Checkbox\n              key={todoItem.id}\n              label={todoItem.label}\n              checked={todoItem.checked}\n              onClick={() => toggleCheck(todoItem.id)}\n              onKeyUp={(e) => handleKeyUp(e, todoItem.id)}\n              onDelete={() => handleDelete(todoItem.id)}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"no-todos\">Looks like you&apos;re absolutely free </div>\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport './todo-results.scss';\nimport { TodosContext } from '../../todo-context';\n\nexport const TodoResults = () => {\n  const { todos, setTodos } = React.useContext(TodosContext);\n  //  const [count, setcount] = React.useState(0);\n  const [up, setUp] = React.useState();\n  const calculateChecked = () => {\n    // Fix an ability to calculate completed tasks\n  };\n\n  const count = (localStorage.getItem('count'));\n\n  console.log('count is', count);\n  return (\n    <div className=\"todo-results\">\n      Done:\n      {count}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { TodoForm } from './components/todo-form';\nimport { TodoList } from './components/todo-list';\nimport { TodoResults } from './components/todo-results';\nimport { TodosContext } from './todo-context';\nimport './index.scss';\n\nconst todosTemplate = [\n  {\n    id: 0,\n    label: 'Fix an ability to display all tasks',\n    checked: false,\n  },\n  {\n    id: 1,\n    label: 'Fix a layout, checkboxes should be listed in a column',\n    checked: false,\n  },\n  {\n    id: 2,\n    label: 'Fix an ability to add a new task',\n    checked: false,\n  },\n  {\n    id: 3,\n    label: 'Fix an ability to toggle a task',\n    checked: false,\n  },\n  {\n    id: 4,\n    label: 'Fix an ability to delete a task',\n    checked: false,\n  },\n  {\n    id: 5,\n    label: 'Fix an ability to count completed tasks',\n    checked: false,\n  },\n];\n\nexport const App = () => {\n  const [todos, setTodos] = React.useState([]);\n\n  return (\n    <div className=\"root\">\n      <TodosContext.Provider value={{ todos, setTodos }}>\n        <TodoList />\n        <TodoResults />\n        <TodoForm />\n      </TodosContext.Provider>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}